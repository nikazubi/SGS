package mthiebi.sgs.models;


import java.util.Arrays;
import java.util.List;
import java.util.Objects;
import java.util.stream.Collectors;

public interface SystemPermission {

    String SYSTEM_PARAMETERS_VIEW = "SYSTEM_PARAMETERS_VIEW";
    String SYSTEM_PARAMETERS_MANAGE = "SYSTEM_PARAMETERS_MANAGE";
    String SYSTEM_PARAMETERS_ENCRYPTED_VIEW = "SYSTEM_PARAMETERS_ENCRYPTED_VIEW";

    String APPLICATION_PARAMETERS_VIEW = "APPLICATION_PARAMETERS_VIEW";
    String APPLICATION_PARAMETERS_MANAGE = "APPLICATION_PARAMETERS_MANAGE";
    String APPLICATION_PARAMETERS_PASSWORD_VIEW = "APPLICATION_PARAMETERS_PASSWORD_VIEW";
    String COMPANIES_TOKEN_VIEW = "COMPANIES_TOKEN_VIEW";
    String COMPANIES_TOKEN_MANAGE = "COMPANIES_TOKEN_MANAGE";

    String SYSTEM_USERS_VIEW = "SYSTEM_USERS_VIEW";
    String SYSTEM_USERS_MANAGE = "SYSTEM_USERS_MANAGE";

    String SYSTEM_USER_GROUPS_VIEW = "SYSTEM_USER_GROUPS_VIEW";
    String SYSTEM_USER_GROUPS_MANAGE = "SYSTEM_USER_GROUPS_MANAGE";

    String CHANGE_LOGS_VIEW = "CHANGE_LOGS_VIEW";

    String AUDIT_LOGS_VIEW = "AUDIT_LOGS_VIEW";

    String CUSTOMERS_VIEW = "CUSTOMERS_VIEW";
    String CUSTOMERS_MANAGE = "CUSTOMERS_MANAGE";
    String CUSTOMER_RESET_PASSWORD = "CUSTOMER_RESET_PASSWORD";
    String CUSTOMER_RESET_PASSWORD_MANUAL = "CUSTOMER_RESET_PASSWORD_MANUAL";
    String CUSTOMER_UPDATE_STATUS = "CUSTOMER_UPDATE_STATUS";

    String COMPANIES_VIEW = "COMPANIES_VIEW";
    String COMPANIES_MANAGE = "COMPANIES_MANAGE";

    String POINT_OF_SALES_VIEW = "POINT_OF_SALES_VIEW";
    String POINT_OF_SALES_MANAGE = "POINT_OF_SALES_MANAGE";

    String CARDS_VIEW = "CARDS_VIEW";
    String CARDS_MANAGE = "CARDS_MANAGE";
    String CARDS_UPDATE_STATUS = "CARDS_UPDATE_STATUS";

    String CARD_TYPES_MANAGE = "CARD_TYPES_MANAGE";
    String CARD_TYPES_VIEW = "CARD_TYPES_VIEW";

    String CARD_GENERATION_VIEW = "CARD_GENERATION_VIEW";
    String CARD_GENERATION_MANAGE = "CARD_GENERATION_MANAGE";
    String CARD_GENERATION_REMOVE = "CARD_GENERATION_REMOVE";

    String CARD_REQUESTS_VIEW = "CARD_REQUESTS_VIEW";
    String CARD_REQUESTS_MANAGE = "CARD_REQUESTS_MANAGE";

    String PRODUCTS_VIEW = "PRODUCTS_VIEW";
    String PRODUCTS_MANAGE = "PRODUCTS_MANAGE";

    String NEWS_VIEW = "NEWS_VIEW";
    String NEWS_MANAGE = "NEWS_MANAGE";

    String LOCALIZATION_EDIT = "LOCALIZATION_EDIT";
    String LOCALIZATION_MANAGE = "LOCALIZATION_MANAGE";
    String LOCALIZATION_PARAMS_VIEW = "LOCALIZATION_PARAMS_VIEW";
    String LOCALIZATION_PARAMS_EDIT = "LOCALIZATION_PARAMS_EDIT";

    String GIFTS_VIEW = "GIFTS_VIEW";
    String GIFTS_MANAGE = "GIFTS_MANAGE";

    String BENEFITS_VIEW = "BENEFITS_VIEW";
    
    String TAGS_VIEW = "TAGS_VIEW";
    String TAGS_MANAGE = "TAGS_MANAGE";

    String SCRIPTS_VIEW = "SCRIPTS_VIEW";
    String SCRIPTS_MANAGE = "SCRIPTS_MANAGE";

    String TRANSACTIONS_VIEW = "TRANSACTIONS_VIEW";

    String TRANSACTIONS_MODIFIABLE_FIELDS_EDIT = "TRANSACTIONS_MODIFIABLE_FIELDS_EDIT";

    String CAMPAIGNS_VIEW = "CAMPAIGNS_VIEW";
    String CAMPAIGNS_MANAGE = "CAMPAIGNS_MANAGE";

    String LIABILITIES_VIEW = "LIABILITIES_VIEW";

    String VIRTUAL_POS_VIEW = "VIRTUAL_POS_VIEW";

    String CUSTOMER_GROUP_REGISTRATION_VIEW = "CUSTOMER_GROUP_REGISTRATION_VIEW";
    String CUSTOMER_GROUP_REGISTRATION_MANAGE = "CUSTOMER_GROUP_REGISTRATION_MANAGE";

    String COUPON_VIEW = "COUPON_VIEW";
    String COUPON_MANAGE = "COUPON_MANAGE";

    String COUPON_TYPE_VIEW = "COUPON_TYPE_VIEW";
    String COUPON_TYPE_MANAGE = "COUPON_TYPE_MANAGE";

    String COUPON_TRANSACTION_VIEW = "COUPON_TRANSACTION_VIEW";

    String GLOBAL_FILTERS_MANAGE = "GLOBAL_FILTERS_MANAGE";

    String CAMPAIGN_MANAGE_UNRESTRICTED = "CAMPAIGN_MANAGE_UNRESTRICTED";

    String STANDALONE_POS_SHIFT_VIEW = "STANDALONE_POS_SHIFT_VIEW";

    String STANDALONE_POS_SHIFT_MANAGE = "STANDALONE_POS_SHIFT_MANAGE";

    static List<String> values() {
        return Arrays.stream(SystemPermission.class.getDeclaredFields())
                     .map(field -> {
                         try {
                             return (String) field.get(null);
                         } catch (IllegalAccessException ignore) {
                             return null;
                         }
                     })
                     .filter(Objects::nonNull)
                     .collect(Collectors.toList());
    }
}
